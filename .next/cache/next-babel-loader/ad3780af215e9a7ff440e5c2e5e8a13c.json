{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/yousef/Desktop/nextJS/pages/Components/Body.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar Body =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Body, _React$Component);\n\n  function Body() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Body);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Body)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      shows: []\n    });\n\n    return _this;\n  }\n\n  _createClass(Body, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var respons, resData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n              case 2:\n                respons = _context.sent;\n                _context.next = 5;\n                return respons.json();\n\n              case 5:\n                resData = _context.sent;\n                this.setState({\n                  shows: resData\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      this.state.shows.map(function (person) {\n        return __jsx(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, __jsx(\"img\", {\n          src: person.show.image.original,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.getData();\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"My Body\"), __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.getData()));\n    }\n  }]);\n\n  return Body;\n}(React.Component);\n\nexport default Body;","map":{"version":3,"sources":["/home/yousef/Desktop/nextJS/pages/Components/Body.js"],"names":["React","Body","shows","fetch","respons","json","resData","setState","state","map","person","show","image","original","getData","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,I;;;;;;;;;;;;;;;;;;4DACK;AACHC,MAAAA,KAAK,EAAE;AADJ,K;;;;;;;;;;;;;;;;;uBAKmBC,KAAK,CAAC,8CAAD,C;;;AAArBC,gBAAAA,O;;uBACgBA,OAAO,CAACC,IAAR,E;;;AAAhBC,gBAAAA,O;AACN,qBAAKC,QAAL,CAAc;AAACL,kBAAAA,KAAK,EAAEI;AAAR,iBAAd;;;;;;;;;;;;;;;;;;8BAEK;AACL,WAAKE,KAAL,CAAWN,KAAX,CAAiBO,GAAjB,CAAqB,UAAAC,MAAM,EAAI;AAC3B,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEQ;AAAK,UAAA,GAAG,EAAEA,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR,CADJ;AAMH,OAPD;AAQH;;;6BACO;AACJ,WAAKC,OAAL;AACJ,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKA,OAAL,EADL,CAFN,CADH;AASH;;;;EA/BkBd,KAAK,CAACe,S;;AAkCzB,eAAed,IAAf","sourcesContent":["import React from 'react';\n\nclass Body extends React.Component {\n    state ={\n        shows: [],\n    }\n\n    async componentDidMount() {\n        const respons = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n        const resData = await respons.json();\n        this.setState({shows: resData});\n    }\n    getData(){\n        this.state.shows.map(person => {\n            return(\n                <li>\n                        {/* <p> { person.show.name} </p> */}\n                        <img src={person.show.image.original} />\n                </li>\n            )  \n        })\n    }\n    render(){\n        this.getData();\n    return(\n       <div>\n           <h3>My Body</h3>\n             <ul>\n                 {this.getData()}\n             </ul>\n        </div>\n    )\n\n}\n}\n\nexport default Body;\n"]},"metadata":{},"sourceType":"module"}