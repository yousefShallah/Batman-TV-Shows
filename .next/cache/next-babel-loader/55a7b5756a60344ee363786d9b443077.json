{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/yousef/Desktop/nextJS/pages/Components/Blog.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Blog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Blog, _React$Component);\n\n  function Blog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Blog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Blog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      shows: []\n    });\n\n    return _this;\n  }\n\n  _createClass(Blog, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var respons, resData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n              case 2:\n                respons = _context.sent;\n                _context.next = 5;\n                return respons.json();\n\n              case 5:\n                resData = _context.sent;\n                this.setState({\n                  shows: resData\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('this.state.shows', this.state.shows);\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Batman TV Shows\"), __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.state.shows.map(function (show) {\n        return __jsx(\"li\", {\n          key: show.show.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, __jsx(Link, {\n          href: show.show.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          target: \"blanc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \" \", show.show.name, \"  \")));\n      })));\n    }\n  }]);\n\n  return Blog;\n}(React.Component);\n\nexport default Blog;","map":{"version":3,"sources":["/home/yousef/Desktop/nextJS/pages/Components/Blog.js"],"names":["React","Link","fetch","Blog","shows","respons","json","resData","setState","console","log","state","map","show","id","url","name","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;IAEMC,I;;;;;;;;;;;;;;;;;;4DAEM;AACJC,MAAAA,KAAK,EAAE;AADH,K;;;;;;;;;;;;;;;;;uBAKkBF,KAAK,CAAC,8CAAD,C;;;AAArBG,gBAAAA,O;;uBACgBA,OAAO,CAACC,IAAR,E;;;AAAhBC,gBAAAA,O;AACN,qBAAKC,QAAL,CAAc;AAACJ,kBAAAA,KAAK,EAAEG;AAAR,iBAAd;;;;;;;;;;;;;;;;;;6BAGI;AACJE,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKC,KAAL,CAAWP,KAA3C;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,KAAKO,KAAL,CAAWP,KAAX,CAAiBQ,GAAjB,CAAqB,UAAAC,IAAI,EAAI;AAC3B,eACI;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACA,IAAL,CAAUC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,IAAD;AAAM,UAAA,IAAI,EAAED,IAAI,CAACA,IAAL,CAAUE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,MAAM,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAqBF,IAAI,CAACA,IAAL,CAAUG,IAA/B,OADJ,CADJ,CADJ;AAQH,OATC,CADN,CAFJ,CADJ;AAiBF;;;;EAhCahB,KAAK,CAACiB,S;;AAoCzB,eAAed,IAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nclass Blog extends React.Component {\n\n    state = {\n        shows: [],\n    }\n\n    async componentDidMount() {\n        const respons = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n        const resData = await respons.json();\n        this.setState({shows: resData});\n    }\n\n    render(){\n        console.log('this.state.shows', this.state.shows);\n        \n        return(\n            <div>\n                <h3>Batman TV Shows</h3>\n                <ul> \n                    { this.state.shows.map(show => {\n                        return(\n                            <li key={show.show.id}>\n                                <Link href={show.show.url}>\n                                    <a target=\"blanc\"> { show.show.name }  </a>\n                                </Link> \n                            </li>\n                        )                        \n                    \n                    }) }\n                </ul>  \n          \n            </div>\n    )}\n}\n\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}